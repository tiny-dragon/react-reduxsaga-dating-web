import { fromJS } from "immutable";
import {
  FETCH_ACCOUNT_PROFILE_SUCCESS,
  FETCH_CONTACT_INFORMATION_SUCCESS,
  FETCH_USER_CREDENTIALS_SUCCESS,
  UPDATE_USER_CREDENTIALS_SUCCESS,
  UPDATE_CONTACT_INFORMATION_SUCCESS,
  UPDATE_ACCOUNT_PROFILE_SUCCESS,
  FETCH_PERSONALITY_TEST_QUESTION_SUCCESS,
  FETCH_PERSONALITY_TEST_RESULT_SUCCESS,
  FETCH_BLOCKED_USERS_SUCCESS,
  FETCH_ACCOUNT_UPGRADE_PLANS_SUCCESS,
  ACCOUNT_INACTIVE,
  ACCOUNT_REACTIVATE_SUCCESS,
  FETCH_ACCOUNT_UPGRADE_TOKEN_SUCCESS,
  FETCH_STATES_SUCCESS,
  ACCOUNT_UPGRADE_REQUIRED_REQUEST
} from "../actions/types";

const initialState = fromJS({});

export default (state=initialState, action) => {
  switch(action.type) {
    case FETCH_USER_CREDENTIALS_SUCCESS:  
    case FETCH_ACCOUNT_PROFILE_SUCCESS:
    case FETCH_CONTACT_INFORMATION_SUCCESS:
    case UPDATE_USER_CREDENTIALS_SUCCESS:
    case UPDATE_CONTACT_INFORMATION_SUCCESS:
    case UPDATE_ACCOUNT_PROFILE_SUCCESS:
    case FETCH_PERSONALITY_TEST_QUESTION_SUCCESS:
    case FETCH_PERSONALITY_TEST_RESULT_SUCCESS:
    case FETCH_BLOCKED_USERS_SUCCESS:
    case FETCH_ACCOUNT_UPGRADE_PLANS_SUCCESS:
    case ACCOUNT_INACTIVE:
    case ACCOUNT_REACTIVATE_SUCCESS:
    case FETCH_ACCOUNT_UPGRADE_TOKEN_SUCCESS:
    case FETCH_STATES_SUCCESS:
    case ACCOUNT_UPGRADE_REQUIRED_REQUEST:
      return state.merge(fromJS(action.payload));
    default:
      return state;
  }
}